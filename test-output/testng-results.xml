<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="25477" started-at="2019-04-24T09:21:25Z" finished-at="2019-04-24T09:21:50Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="25477" started-at="2019-04-24T09:21:25Z" finished-at="2019-04-24T09:21:50Z">
      <class name="tv.accedo.TVAndroid.Test.StartPlayer">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="8240" started-at="2019-04-24T09:21:17Z" finished-at="2019-04-24T09:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="launchApp(java.lang.String)[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="launchApp" is-config="true" duration-ms="24682" started-at="2019-04-24T09:21:25Z" finished-at="2019-04-24T09:21:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://0.0.0.0:4445/wd/hub]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2019-04-24T09:21:50Z" finished-at="2019-04-24T09:21:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2019-04-24T09:21:50Z" finished-at="2019-04-24T09:21:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tv.accedo.TVAndroid.Test.StartPlayer.liveTVVideoPlay() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="liveTVVideoPlay()[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="liveTVVideoPlay" duration-ms="776" started-at="2019-04-24T09:21:50Z" finished-at="2019-04-24T09:21:50Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'LTA1TFLHGS-MAC.local', ip: 'fe80:0:0:0:1464:a1d2:1a1f:a8b2%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.2', java.version: '1.8.0_181'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: tv.accedo.airtel.wynk.prese..., appPackage: tv.accedo.airtel.wynk.debug, autoGrantPermissions: false, browserName: , databaseEnabled: false, desired: {appActivity: tv.accedo.airtel.wynk.prese..., appPackage: tv.accedo.airtel.wynk.debug, autoGrantPermissions: false, browserName: , deviceName: ANDROID, newCommandTimeout: 180, noReset: true, platformName: android}, deviceManufacturer: OnePlus, deviceModel: ONEPLUS A3003, deviceName: d32c6c8f, deviceScreenSize: 1080x1920, deviceUDID: d32c6c8f, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 180, noReset: true, platform: LINUX, platformName: LINUX, platformVersion: 8.0.0, takesScreenshot: true, warnings: {}, webStorageEnabled: false}
Session ID: 6d0a4ab0-9ea1-46d1-8fd4-9e0c0d3cb4f1
*** Element info: {Using=xpath, value=//android.widget.ImageButton[contains(@content-desc,'Open navigation drawer')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'LTA1TFLHGS-MAC.local', ip: 'fe80:0:0:0:1464:a1d2:1a1f:a8b2%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.2', java.version: '1.8.0_181'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: tv.accedo.airtel.wynk.prese..., appPackage: tv.accedo.airtel.wynk.debug, autoGrantPermissions: false, browserName: , databaseEnabled: false, desired: {appActivity: tv.accedo.airtel.wynk.prese..., appPackage: tv.accedo.airtel.wynk.debug, autoGrantPermissions: false, browserName: , deviceName: ANDROID, newCommandTimeout: 180, noReset: true, platformName: android}, deviceManufacturer: OnePlus, deviceModel: ONEPLUS A3003, deviceName: d32c6c8f, deviceScreenSize: 1080x1920, deviceUDID: d32c6c8f, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 180, noReset: true, platform: LINUX, platformName: LINUX, platformVersion: 8.0.0, takesScreenshot: true, warnings: {}, webStorageEnabled: false}
Session ID: 6d0a4ab0-9ea1-46d1-8fd4-9e0c0d3cb4f1
*** Element info: {Using=xpath, value=//android.widget.ImageButton[contains(@content-desc,'Open navigation drawer')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:129)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)
at io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at tv.accedo.TVAndroid.Test.StartPlayer.setQuality(StartPlayer.java:179)
at tv.accedo.TVAndroid.Test.StartPlayer.liveTVVideoPlay(StartPlayer.java:130)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:230)
at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:172)
at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:242)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:576)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- liveTVVideoPlay -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-04-24T09:21:50Z" finished-at="2019-04-24T09:21:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tv.accedo.TVAndroid.Test.StartPlayer.liveTVVideoPlay() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2019-04-24T09:21:50Z" finished-at="2019-04-24T09:21:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tv.accedo.TVAndroid.Test.StartPlayer.liveTVVideoPlay() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:tv.accedo.TVAndroid.Test.StartPlayer@667a738]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2019-04-24T09:21:50Z" finished-at="2019-04-24T09:21:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- tv.accedo.TVAndroid.Test.StartPlayer -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
